{"version":3,"sources":["../../../projects/mat-table-filter/src/lib/mat-table-filter.enum.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/mat-table-filter/src/lib/services/filter-predicate.ts","../../../projects/mat-table-filter/src/lib/services/array-predicate.service.ts","../../../projects/mat-table-filter/src/lib/services/alpha-numeric-predicate.service.ts","../../../projects/mat-table-filter/src/lib/services/mat-table-filter.service.ts","../../../projects/mat-table-filter/src/lib/mat-table-filter.directive.ts","../../../projects/mat-table-filter/src/lib/mat-table-filter.module.ts"],"names":["MatTableFilter","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__values","o","s","Symbol","iterator","m","i","length","next","value","done","FilterPredicate","executeCondition","itemPair","options","handleLetterCasing","caseSensitive","filterType","EQUALS","equals","ANYWHERE","anywhere","STARTS_WITH","startsWith","ENDS_WITH","endsWith","transformAllLowerCase","object","key","isString","toLowerCase","ArrayPredicateService","_super","warn","console","UNSUPPORTED_OPERATION_WARNING","SUGGESTION_WARNING","isEqual","example","sort","item","isSubset","difference","flatten","Injectable","args","providedIn","AlphaNumericPredicateService","includes","MatTableFilterService","_alphaNumericService","_arrayService","filterPredicate","propertyOptions","commonOptions","propertyName","exampleKeys","keys","exampleKeys_1","exampleKeys_1_1","exampleValue","cloneDeep","isNil","every","isEmpty","_a","itemValue","nextPropertyName","getNextPropertyName","finalizeOptionsForProperty","isFunction","columnOptions","isAlphaNumeric","valuePair","toString","isArray","isBoolean","isChanged","oldEntity","newEntity","toPlainJson","JSON","parse","stringify","isNumber","MatTableFilterDirective","_filterService","_table","debounceTime","initDebounceSubject","ngDoCheck","_oldExampleEntity","exampleEntity","_exampleEntitySubject","undefined","_this","BehaviorSubject","pipe","subscribe","_","updateFilterPredicate","matDataSource","getMatDataSource","getFilterPredicate","filter","customPredicate","dataSource","Directive","selector","exportAs","MatTable","decorators","type","Host","Self","Optional","Input","NgModule","declarations","imports","MatTableModule","exports"],"mappings":"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","sourcesContent":["export enum MatTableFilter {\r\n  EQUALS = 'EQUALS',\r\n  ANYWHERE = 'ANYWHERE',\r\n  STARTS_WITH = 'STARTS_WITH',\r\n  ENDS_WITH = 'ENDS_WITH'\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { MatTableFilter } from '../mat-table-filter.enum';\r\nimport { ItemPair } from '../item-pair';\r\nimport isString from 'lodash-es/isString';\r\nimport { Options } from '../options';\r\n\r\nexport abstract class FilterPredicate<T> {\r\n\r\n  public abstract equals(itemPair: ItemPair<T>): boolean;\r\n  public abstract anywhere(itemPair: ItemPair<T>): boolean;\r\n  public abstract startsWith(itemPair: ItemPair<T>): boolean;\r\n  public abstract endsWith(itemPair: ItemPair<T>): boolean;\r\n\r\n  public executeCondition(itemPair: ItemPair<T>, options: Options): boolean {\r\n    this.handleLetterCasing(itemPair, options.caseSensitive);\r\n    switch (options.filterType) {\r\n      case MatTableFilter.EQUALS:\r\n        return this.equals(itemPair);\r\n      case MatTableFilter.ANYWHERE:\r\n        return this.anywhere(itemPair);\r\n      case MatTableFilter.STARTS_WITH:\r\n        return this.startsWith(itemPair);\r\n      case MatTableFilter.ENDS_WITH:\r\n        return this.endsWith(itemPair);\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  private handleLetterCasing(itemPair: ItemPair<any>, caseSensitive: boolean): void {\r\n    if (!caseSensitive) {\r\n      this.transformAllLowerCase(itemPair);\r\n    }\r\n  }\r\n\r\n  private transformAllLowerCase(object: any) {\r\n    // tslint:disable-next-line:forin\r\n    for (const key in object) {\r\n      const value = object[key];\r\n      if (isString(value)) {\r\n        object[key] = value.toLowerCase();\r\n      } else {\r\n        this.transformAllLowerCase(value);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FilterPredicate } from './filter-predicate';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport difference from 'lodash-es/difference';\r\nimport flatten from 'lodash-es/flatten';\r\nimport { ItemPair } from '../item-pair';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArrayPredicateService extends FilterPredicate<Array<any>> {\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  private static readonly UNSUPPORTED_OPERATION_WARNING = 'This filterType is unsupported for array filtering. FilterType.ANYWHERE is executed instead!';\r\n  private static readonly SUGGESTION_WARNING = 'You can set a custom predicate for the array property through PropertyOptions!';\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  private static warn() {\r\n    console.warn(ArrayPredicateService.UNSUPPORTED_OPERATION_WARNING);\r\n    console.warn(ArrayPredicateService.SUGGESTION_WARNING);\r\n  }\r\n\r\n  public equals(itemPair: ItemPair<Array<any>>): boolean {\r\n    return isEqual(itemPair.example.sort(), itemPair.item.sort());\r\n  }\r\n  public anywhere(itemPair: ItemPair<Array<any>>): boolean {\r\n    return this.isSubset(itemPair.example, itemPair.item);\r\n  }\r\n  public startsWith(itemPair: ItemPair<Array<any>>): boolean {\r\n    ArrayPredicateService.warn();\r\n    return this.anywhere(itemPair);\r\n  }\r\n  public endsWith(itemPair: ItemPair<Array<any>>): boolean {\r\n    ArrayPredicateService.warn();\r\n    return this.anywhere(itemPair);\r\n  }\r\n\r\n  private isSubset(example: Array<any>, item: Array<any>): boolean {\r\n    return !difference(flatten(example), flatten(item)).length;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FilterPredicate } from './filter-predicate';\r\nimport { ItemPair } from '../item-pair';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlphaNumericPredicateService extends FilterPredicate<string> {\r\n\r\n  constructor() {\r\n    super();\r\n   }\r\n\r\n  public equals(itemPair: ItemPair<string>): boolean {\r\n    return itemPair.example === itemPair.item;\r\n  }\r\n  public anywhere(itemPair: ItemPair<string>): boolean {\r\n    return itemPair.item.includes(itemPair.example);\r\n  }\r\n  public startsWith(itemPair: ItemPair<string>): boolean {\r\n    return itemPair.item.startsWith(itemPair.example);\r\n  }\r\n  public endsWith(itemPair: ItemPair<string>): boolean {\r\n    return itemPair.item.endsWith(itemPair.example);\r\n  }\r\n\r\n}\r\n","import { PropertyOptions, PredicateFunc } from '../property-options';\r\nimport { ItemPair } from './../item-pair';\r\nimport { ArrayPredicateService } from './array-predicate.service';\r\nimport { AlphaNumericPredicateService } from './alpha-numeric-predicate.service';\r\nimport { Injectable } from '@angular/core';\r\nimport isEqual from 'lodash-es/isEqual';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport isNil from 'lodash-es/isNil';\r\nimport every from 'lodash-es/every';\r\nimport isFunction from 'lodash-es/isFunction';\r\nimport isArray from 'lodash-es/isArray';\r\nimport isBoolean from 'lodash-es/isBoolean';\r\nimport isString from 'lodash-es/isString';\r\nimport isNumber from 'lodash-es/isNumber';\r\nimport isEmpty from 'lodash-es/isEmpty';\r\nimport { Options } from '../options';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MatTableFilterService {\r\n  constructor(private _alphaNumericService: AlphaNumericPredicateService, private _arrayService: ArrayPredicateService) {}\r\n\r\n  public filterPredicate(itemPair: ItemPair<any>, propertyOptions: PropertyOptions,\r\n                         commonOptions: Options | PredicateFunc, propertyName?: string): boolean {\r\n    // tslint:disable-next-line:forin\r\n    const exampleKeys = Object.keys(itemPair.example);\r\n    for (const key of exampleKeys) {\r\n      const exampleValue = cloneDeep(itemPair.example[key]);\r\n      if (isNil(exampleValue) || every(exampleValue, isEmpty) && typeof exampleValue !== 'boolean') {\r\n        // if example entity's property is undefined/null/empty then it means the caller wants all the data\r\n        continue;\r\n      }\r\n      if (itemPair.item?.hasOwnProperty(key)) {\r\n        // if example entity has additional columns then search fails\r\n        const itemValue = cloneDeep(itemPair.item[key]);\r\n        const nextPropertyName = this.getNextPropertyName(propertyName, key);\r\n        const options = this.finalizeOptionsForProperty(commonOptions, propertyOptions, nextPropertyName);\r\n        if (isFunction(options)) { // if user defined predicate is present for property\r\n          const customPredicate = options as PredicateFunc;\r\n          if (!customPredicate(itemValue)) {\r\n            return false;\r\n          }\r\n        } else {\r\n          const columnOptions = options as Options;\r\n          if (this.isAlphaNumeric(itemValue)) {\r\n            const valuePair: ItemPair<string> = {item: itemValue.toString(), example: exampleValue};\r\n            if (!this._alphaNumericService.executeCondition(valuePair, columnOptions)) {\r\n              return false;\r\n            }\r\n          } else if (isArray(itemValue)) {\r\n            const valuePair: ItemPair<any[]> = {item: itemValue, example: exampleValue};\r\n            if (!this._arrayService.executeCondition(valuePair, columnOptions)) {\r\n              return false;\r\n            }\r\n          } else if (isBoolean(itemValue)) {\r\n            if (itemValue !== exampleValue) {\r\n              return false;\r\n            }\r\n          } else {\r\n            const valuePair: ItemPair<any> = {item: itemValue, example: exampleValue};\r\n            if (!this.filterPredicate(valuePair, propertyOptions, options, nextPropertyName)) {\r\n              // if one of the inner properties returns true, this shouldnt affect the whole item's filtering\r\n              // however if it returns false then the item must not be in the list\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private finalizeOptionsForProperty(commonOptions: Options | PredicateFunc, propertyOptions: PropertyOptions, propertyName: string):\r\n   Options | PredicateFunc {\r\n    if (propertyOptions && propertyOptions.hasOwnProperty(propertyName)) {\r\n      return propertyOptions[propertyName];\r\n    } else {\r\n      return commonOptions;\r\n    }\r\n  }\r\n\r\n  private getNextPropertyName(propertyName: string, key: string): string {\r\n    return propertyName ? (propertyName + '.' + key) : key;\r\n  }\r\n\r\n  public isChanged(oldEntity: any, newEntity: any): boolean {\r\n    return !isEqual(this.toPlainJson(oldEntity), this.toPlainJson(newEntity));\r\n  }\r\n\r\n  public toPlainJson(object: any): JSON {\r\n    if (object) {\r\n      return JSON.parse(JSON.stringify(object));\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private isAlphaNumeric(value: any): boolean {\r\n    return isString(value) || isNumber(value);\r\n  }\r\n}\r\n","import { PropertyOptions } from './property-options';\r\nimport { Directive, DoCheck, Input, Host, Self, Optional } from '@angular/core';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { MatTableFilter } from './mat-table-filter.enum';\r\nimport { MatTableFilterService } from './services/mat-table-filter.service';\r\n\r\n@Directive({\r\n  selector: '[matTableFilter]',\r\n  exportAs: 'matTableFilter'\r\n})\r\nexport class MatTableFilterDirective implements DoCheck {\r\n  private _oldExampleEntity: any;\r\n\r\n  @Input() exampleEntity: any;\r\n\r\n  /**\r\n   * in millis\r\n   */\r\n  @Input() debounceTime = 400;\r\n  @Input() filterType: MatTableFilter = MatTableFilter.ANYWHERE;\r\n  @Input() caseSensitive = false;\r\n  @Input() customPredicate: (data: any) => boolean;\r\n  @Input() propertyOptions: PropertyOptions;\r\n  private _exampleEntitySubject: BehaviorSubject<void>;\r\n\r\n\r\n  constructor(\r\n    private _filterService: MatTableFilterService,\r\n    @Host() @Self() @Optional() private _table: MatTable<any>\r\n  ) {\r\n    this.initDebounceSubject();\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (this._filterService.isChanged(this._oldExampleEntity, this.exampleEntity)) {\r\n      this._oldExampleEntity = this._filterService.toPlainJson(this.exampleEntity);\r\n      this._exampleEntitySubject.next(undefined);\r\n    }\r\n  }\r\n\r\n\r\n  private initDebounceSubject() {\r\n    this._exampleEntitySubject = new BehaviorSubject<void>(null);\r\n    this._exampleEntitySubject.pipe(\r\n      debounceTime(this.debounceTime))\r\n      .subscribe(_ => {\r\n        this.updateFilterPredicate();\r\n      });\r\n  }\r\n\r\n  private updateFilterPredicate() {\r\n    const matDataSource = this.getMatDataSource();\r\n    if (matDataSource) {\r\n      matDataSource.filterPredicate = this.getFilterPredicate();\r\n      matDataSource.filter = this.exampleEntity as any;\r\n    }\r\n  }\r\n\r\n  private getFilterPredicate() {\r\n    if (this.customPredicate) {\r\n      return this.customPredicate;\r\n    } else {\r\n      return (item: any): boolean => {\r\n        return this._filterService.filterPredicate({ example: this.exampleEntity, item }, this.propertyOptions,\r\n          { filterType: this.filterType, caseSensitive: this.caseSensitive });\r\n      };\r\n    }\r\n  }\r\n\r\n  private getMatDataSource(): MatTableDataSource<any> {\r\n    const matTable = this._table as MatTable<any>;\r\n    return (matTable.dataSource as MatTableDataSource<any>);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTableFilterDirective } from './mat-table-filter.directive';\r\n\r\n@NgModule({\r\n  declarations: [MatTableFilterDirective],\r\n  imports: [\r\n    MatTableModule\r\n  ],\r\n  exports: [MatTableFilterDirective]\r\n})\r\nexport class MatTableFilterModule { }\r\n"]}